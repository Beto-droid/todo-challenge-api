### GET JWT TOKEN (step 1)
POST http://localhost:8000/api/token/ HTTP/1.1
Content-Type: application/json

{
  "username": "pedro",
  "password": "roberto"
}

> {% client.global.set("access_token", response.body.access); %}

###  GET All user tasks (step 2)
GET http://localhost:8000/tasks/ HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{access_token}}

###  POST Create a task
POST http://localhost:8000/tasks/ HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{access_token}}

{
  "title" : "Test 333",
  "description": " Description 333"
}

> {% client.global.set("task_id", response.body.task_id); %}


### GET the same Task Created in top

GET http://localhost:8000/tasks/{{task_id}}/ HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{access_token}}

### PUT the same Task Created in top

PUT http://localhost:8000/tasks/{{task_id}}/ HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{access_token}}

{
  "title" : "Descriptive title",
  "description": "Titelated Description",
  "status": "Started"
}

### PATCH the same Task Created in top

PATCH http://localhost:8000/tasks/{{task_id}}/ HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{access_token}}

{
  "title" : "Patched title 1"
}


### PATCH status (using pedro that its an admin so it should be hable to)
PATCH http://localhost:8000/tasks/{{task_id}}/ HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{access_token}}

{
  "status" : "Started"
}

### GET Tasks filter description (search non exact description)
GET http://localhost:8000/tasks/?description__icontains=Titelated HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{access_token}}

### GET Taks filter created (search non exact description)
GET http://localhost:8000/tasks/?created_at__gt=2025-03-09 HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{access_token}}

### GET Taks filter q (search for all enabled parameters, created and description)
GET http://localhost:8000/tasks/?q=2025-03-09 HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{access_token}}

### GET Taks sort by created_at (gets all tasks and sorted by created_at ascending)
GET http://localhost:8000/tasks/?sort=created_at HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{access_token}}

### GET Taks sort by created_at (gets all tasks and sorted by created_at descending)
GET http://localhost:8000/tasks/?sort=-created_at HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{access_token}}