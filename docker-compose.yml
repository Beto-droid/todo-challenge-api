services:
  todo_api:
    build:
      context: .
      dockerfile: Dockerfile
#    image: todo_api
    image: betodroid/todo_backend_api:latest
    container_name: todo_api
    restart: unless-stopped
    command: >
      bash -c "python manage.py migrate
      && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - todo_db
      - prometheus
      - grafana
    env_file:
      - .env

  todo_db:
    image: postgres:17.0
    container_name: todo_db
    ports:
      - "5444:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/datasources:/etc/grafana/provisioning/datasources/
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards/
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    restart: unless-stopped

volumes:
  postgres_data:
  prometheus_data:
  grafana_data:
